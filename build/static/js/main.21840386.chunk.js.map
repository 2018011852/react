{"version":3,"sources":["pages/Input.js","pages/List.js","pages/TodoList.js","index.js"],"names":["Input","htmlFor","ref","this","props","refs","value","typr","onChange","onClick","addTodo","Component","List","renderTodos","style","color","TodoList","handleChange","e","setState","inpValue","target","state","todos","title","done","delTodo","idx","filter","item","index","toggle","newTodos","JSON","parse","stringify","map","todo","check","type","dangerouslySetInnerHTML","__html","localStorage","setItem","inp","input","React","ReactDOM","render","document","getElementById"],"mappings":"6KAkBeA,E,uKAbP,OACI,6BACI,2BAAOC,QAAQ,OAAf,aACA,2BAAOC,IAAOC,KAAKC,MAAMC,KACjBC,MAAOH,KAAKC,MAAME,MAClBC,KAAK,OACLC,SAAUL,KAAKC,MAAMI,WAE7B,4BAAQC,QAASN,KAAKC,MAAMM,SAA5B,qB,GAVIC,aCiBLC,E,uKAdP,OACI,6BACI,wDACA,4BACKT,KAAKC,MAAMS,aAAY,IAE5B,wDACA,wBAAIA,YAAeV,KAAKC,MAAMS,YAAaC,MAAS,CAACC,MAAM,QACtDZ,KAAKC,MAAMS,aAAY,S,GAVzBF,aC4EJK,E,kDA3EX,aAAc,IAAD,8BACT,gBAMJC,aAAgB,SAACC,GACb,EAAKC,SAAS,CAACC,SAASF,EAAEG,OAAOf,SARxB,EAgBbI,QAAQ,WACsB,IAAvB,EAAKY,MAAMF,UAGd,EAAKD,SAAS,CACVI,MAAM,CACF,CACIC,MAAM,EAAKF,MAAMF,SACjBK,MAAK,IAHR,mBAKE,EAAKH,MAAMC,WA1Bb,EA8BbG,QAAQ,SAACC,GACL,EAAKR,SAAS,CACVI,MAAM,EAAKD,MAAMC,MAAMK,QAAO,SAACC,EAAKC,GAAN,OAAcA,GAAOH,QAhC9C,EAmCbI,OAAS,SAACD,GACN,IAAIE,EAASC,KAAKC,MAAMD,KAAKE,UAAU,EAAKb,MAAMC,QAClDS,EAASF,GAAOL,MAAQO,EAASF,GAAOL,KACxC,EAAKN,SAAS,CACVI,MAAMS,KAvCD,EA0CbnB,YAAc,SAACY,GACX,OAAO,EAAKH,MAAMC,MAAMa,KAAI,SAACC,EAAKV,GAC9B,GAAGF,GAAQY,EAAKZ,KACZ,OAAO,4BACH,2BACIhB,QAAS,kBAAM,EAAKsB,OAAOJ,IAC3BW,MAAOb,EACPc,KAAK,aAET,0BAAMC,wBAAyB,CAACC,OAAOJ,EAAKb,SAC5C,4BAAQf,QAAS,kBAAI,EAAKiB,QAAQC,KAAlC,qBAlDZ,EAAKL,MAAQ,CACTF,SAAS,GACTG,MAAM,IAJD,E,iEAWTmB,aAAaC,QACT,QACAV,KAAKE,UAAUhC,KAAKmB,MAAMC,U,+BA4CxB,IAAD,SACoBpB,KAAKmB,MADzB,EACEC,MADF,EACQH,SACb,OACI,6BACI,kBAAC,EAAD,CAAOV,QAASP,KAAKO,QACbJ,MAAOH,KAAKmB,MAAMF,SAClBZ,SAAUL,KAAKc,aACfZ,KAAM,SAAAuC,GAAG,OAAI,EAAKC,MAAMD,KAEhC,kBAAC,EAAD,CAAMlB,QAASvB,KAAKuB,QACZK,OAAQ5B,KAAK4B,OACblB,YAAaV,KAAKU,mB,GArEnBiC,IAAMnC,WCD7BoC,IAASC,OACL,6BACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,U","file":"static/js/main.21840386.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport TodoList from './TodoList';\r\n\r\nclass Input extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"inp\">TodoList:</label>                \r\n                <input ref = {this.props.refs}\r\n                        value={this.props.value}\r\n                        typr=\"text\"\r\n                        onChange={this.props.onChange}\r\n                />\r\n                <button onClick={this.props.addTodo}>添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Input","import React, { Component } from 'react';\r\nimport TodoList from '../pages/TodoList';\r\nimport Input from '../pages/Input'\r\n//每个文件都需要导入React\r\nclass List extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h2>正在进行</h2>\r\n                <ul>\r\n                    {this.props.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成</h2>\r\n                <ul renderTodos = {this.props.renderTodos} style = {{color:'red'}}>\r\n                    {this.props.renderTodos(true)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default List;","import React, { Component } from 'react'\r\nimport Input from './Input'\r\nimport List from './List'\r\n\r\nclass TodoList extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue:'',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange =  (e) => {\r\n        this.setState({inpValue:e.target.value});\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo=()=>{\r\n        if(this.state.inpValue == ''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos:[\r\n                {\r\n                    title:this.state.inpValue,\r\n                    done:false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n    }\r\n    delTodo=(idx)=>{\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos=JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done == todo.done){\r\n                return <li>\r\n                    <input\r\n                        onClick={() => this.toggle(idx)}\r\n                        check={done}\r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button onClick={()=>this.delTodo(idx)}>删除</button>\r\n            </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const {todos,inpValue} = this.state;\r\n        return (\r\n            <div>\r\n                <Input addTodo={this.addTodo}\r\n                        value={this.state.inpValue}\r\n                        onChange={this.handleChange}\r\n                        refs={inp => this.input=inp}\r\n                />\r\n                <List delTodo={this.delTodo}\r\n                        toggle={this.toggle}\r\n                        renderTodos={this.renderTodos}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TodoList from './pages/TodoList'\r\nReactDOM.render(\r\n    <div>\r\n        <TodoList />\r\n    </div>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// // import Home from './pages/Home'\r\n// // import Control from './components/Control'\r\n// // import Demo from './pages/Demo';\r\n// // import App from './pages/App'\r\n// // import Hoc from './pages/Hoc'\r\n// import Hoc,{Detail} from './pages/Hoc'\r\n// import Hook from './pages/Hook'\r\n// import Context from './pages/context'\r\n\r\n// ReactDOM.render(\r\n//   <div>\r\n//     <Context.Provider value=\"123\">\r\n//       <Hook />\r\n//     </Context.Provider>\r\n//   </div>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// 组件声明\r\n// 函数组件\r\n// UI（展示）组件，木偶组件\r\n// function App(props){\r\n//   const { title, id } = props;\r\n//   return <div>\r\n//     <h1>App组件内容</h1>\r\n//     <div>{title}</div>\r\n//     <div>{id}</div>\r\n//   </div>\r\n// }\r\n// // 智能组件\r\n// class Demo extends React.Component{\r\n//   constructor(){\r\n//      super();\r\n//     //  声明状态\r\n//      this.state = {\r\n//        name: new Date().toLocaleString()\r\n//      }\r\n//      setInterval(()=>{\r\n//       this.setState({name:new Date().toLocaleString()})\r\n//      },1000)\r\n//   }\r\n//   render(){\r\n//     return <div>\r\n//       <div>name:{this.state.name}</div>\r\n//       <App title={this.state.name} id='app'/>\r\n//     </div>\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// let ele = React.createElement(\r\n//   'h1',\r\n//   {id:'title'},\r\n//   React.createElement('div',{},'hello'),\r\n//   'react'\r\n// )\r\n\r\n// 将jsx对象渲染到DOM中\r\n// let ReactDOM = {\r\n//   render(eleObj,container){\r\n//     // 解构\r\n//     const { type,props } = eleObj;\r\n//     // 创建第一层节点\r\n//     let ele = document.createElement(type);\r\n//     // 遍历属性对象，将属性添加到第一层节点对象上\r\n//     for (const prop in props) {\r\n//       console.log(prop)\r\n//       if(prop == 'children'){\r\n//         if(typeof props.children == 'string'){\r\n//             const txtNode = document.createTextNode(props.children);\r\n//             ele.appendChild(txtNode);\r\n//             break;\r\n//         }\r\n//         // 将第一层节点对象的子元素添加进去\r\n//         props.children.forEach( child => {\r\n//           if(typeof child == 'string'){\r\n//             const txtNode = document.createTextNode(child);\r\n//             ele.appendChild(txtNode);\r\n//           }else{\r\n//             ReactDOM.render(child,ele);\r\n//           }\r\n//         })\r\n//       }else{\r\n//         ele[prop] = props[prop];\r\n//       }\r\n//     }\r\n\r\n//     // 将第一层DOM节点添加到container中\r\n//     container.appendChild(ele);\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n  // 1、原生JS，DOM操作（jQ）\r\n  // 2、React：开发效率高、性能高\r\n  // 3、环境搭建、创建一个项目、运行\r\n  // 4、JSX语法"],"sourceRoot":""}